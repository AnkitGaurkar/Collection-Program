
/*Comparable :-
 * Comparable is a interface.
 * its found in java.lang.package
 * and contains only one method is compareTo(Object).
 * Comparable is useful for to order of the object user define class.
 * its is provide  sorting of elements on the basis of single data member.
 * 
 * here we can sort the element of String Objects, Wrapper classes Object, and User Define Object...
 * 
 * Collection Class :- provides static method for sorting ,
 * if Collection element of Set or Map so we can use there TreeSet or TreeMap..
 * but However, we cannot sort list interface element..
 * 
 *   String Object and Wrapper classes Object implements the Comparable interface by default..
 *   
 */
 Student.java
 
package com;
import java.util.ArrayList;

public class Student implements Comparable<Student> {

	int id;
	String name;
	String clgName;
	
	public Student(int id,String name,String clgName)
	{
		this.id=id;
		this.name=name;
		this.clgName=clgName;
	}
	 public String toString()
	 {
		return id+" "+name+" "+clgName;
		 
	 }
	@Override
	public int compareTo(Student d) {
		// TODO Auto-generated method stub
		if(id>d.id)
		{
		return 1;
	}
		else if(id<d.id)
		{
			return -1;
		}
		else
		{
			return 0;
		}	
}
}
Test.java
package com;

import java.util.ArrayList;
import java.util.Collections;

public class Test {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		ArrayList<Student>a1=new ArrayList<Student>();
		a1.add(new Student(9, "Ankit", "PIBM"));
		a1.add(new Student(8,"Sunil","NHM"));
		a1.add(new Student(2,"An","Sppp"));
		a1.add(new Student(44,"Ankitt","PPM"));
		
		
		Collections.sort(a1);
		
		System.out.println(a1.toString());
		
	}

}

