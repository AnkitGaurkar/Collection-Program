/*Map Interface:-
 * A map contain values on the basis of key. i.e. key & value pair..
 * Each Key & Value pair is known as Entry..
 * A Map contain unique key..
 * A map is useful for update, delete & delete element on the basis of key..
 * 
 * There are 2 interfaces Map & Sorted Map..
 * Map- HashMap & LinkedHashMap classes..
 * SortedMap- TreeMap..
 * 
 * A map does not allow duplicate key's, but you can have duplicate values..
 * 
 * HashMap & LinkedHashMap allow null key & values.
 * but TreeMap does not allow null value..
 * 
 * A map cannot be Traverse so thats why, we convert it into Set &
 * using keySet() or entrySet()method...
 * 
 * HashMap:-
 * It is a class and its implementation of Map interface..
 * it does not maintain any order..
 */

package com;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

public class MapInterface {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		HashMap<Object, Object> hs=new HashMap<Object, Object>();
		hs.put(1,"Ankit");
		hs.put(6,"Sunil");
		hs.put(2, "Sangita");
		hs.put(null,null );
		hs.put(9, "Rohan");
		
		System.out.println(hs.keySet());//its use for show the element
		
		Set s=hs.entrySet();//its use for to convert Set interface
		Iterator<Object> i1=s.iterator();//for traversing
		while(i1.hasNext())
		{
			Map.Entry entry=(Map.Entry)i1.next();// it is subinterface of map .. its use for access elements in map format and its provide getKey and getValue()....
			
			System.out.println(entry.getKey()+" "+entry.getValue());
		}
		
	}

}
